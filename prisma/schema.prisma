// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Address {
  addressId    Int     @id @default(autoincrement())
  addressLine1 String
  addressLine2 String?
  zip          Int
  city         String
  state        String

  @@map(name: "address")
  User User[]
}

model User {
  userId    Int    @id @default(autoincrement())
  firstName String
  lastName  String

  countryCode String
  phone       Int @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String


  address     Address? @relation(fields: [residenceId], references: [addressId])
  residenceId Int?

  posts Post[]

  @@map(name: "user")
  Like    Like[]
  Comment Comment[]
}

model Post {
  postId Int @id @default(autoincrement())

  createdAt DateTime @default(now())

  postTitle String

  description String?

  author   User? @relation(fields: [authorId], references: [userId])
  authorId Int?


  @@map(name: "post")
  Like    Like[]
  Comment Comment[]
  Tag     Tag[]
}

model Like {
  likeId Int @id @default(autoincrement())

  user   User? @relation(fields: [userID], references: [userId])
  userID Int?

  post   Post? @relation(fields: [postId], references: [postId])
  postId Int?

  @@map(name: "like")
}

model Comment {
  commentId Int @id @default(autoincrement())

  user   User? @relation(fields: [userID], references: [userId])
  userID Int?

  post   Post? @relation(fields: [postId], references: [postId])
  postId Int?

  @@map(name: "comment")
}

model Tag {
  tagId Int @id @default(autoincrement())

  tagName String
  post   Post? @relation(fields: [postId], references: [postId])
  postId Int?

  @@map(name: "tag")
}
